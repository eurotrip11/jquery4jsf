<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                        "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
 <tlib-version>1.0</tlib-version>
 <jsp-version>1.2</jsp-version>
 <short-name>jq</short-name>
 <uri>http://www.jquery4jsf.org/jsf</uri>
 <tag>
  <name>outputLink</name>
  <tag-class>org.jquery4jsf.taglib.html.ext.HtmlLinkTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>onblur</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element loses focus.</description>
  </attribute>
  <attribute>
   <name>onfocus</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element receives focus.</description>
  </attribute>
  <attribute>
   <name>onchange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element is modified.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
  <!-- HTML 4.0 anchor (=a) attributes -->
  <attribute>
   <name>charset</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the character encoding of the
				linked resource.</description>
  </attribute>
  <attribute>
   <name>target</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Names the frame that should display content
				generated by invoking this action.</description>
  </attribute>
  <attribute>
   <name>coords</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The coordinates of regions within a client
				side image map.</description>
  </attribute>
  <attribute>
   <name>hreflang</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the destination of a link.</description>
  </attribute>
  <attribute>
   <name>href</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The language of the linked resource.</description>
  </attribute>
  <attribute>
   <name>name</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the name of an anchor</description>
  </attribute>
  <attribute>
   <name>rel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The relationship between the current document
				and the linked resource.</description>
  </attribute>
  <attribute>
   <name>rev</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The type(s) describing the reverse link for
				the linked resource.</description>
  </attribute>
  <attribute>
   <name>shape</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The shape of a region in a client side image
				map.</description>
  </attribute>
 </tag>
 <tag>
  <name>abbr</name>
  <tag-class>org.jquery4jsf.taglib.html.ext.HtmlAbbrTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
 </tag>
 <tag>
  <name>acronym</name>
  <tag-class>org.jquery4jsf.taglib.html.ext.HtmlAcronymTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
 </tag>
 <tag>
  <name>address</name>
  <tag-class>org.jquery4jsf.taglib.html.ext.HtmlAddressTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
 </tag>
 <tag>
  <name>autoComplete</name>
  <tag-class>org.jquery4jsf.custom.autocomplete.AutoCompleteTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The initial value of this component.</description>
  </attribute>
  <attribute>
   <name>converter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>An expression that specifies the Converter for this
				component. If the value binding expression is a String, the String
				is used as an ID to look up a Converter. If the value binding
				expression is a Converter, uses that instance as the converter. The
				value can either be a static value (ID case only) or an EL
				expression.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				value change events should fire. During normal event processing,
				value change events are fired during the "invoke application" phase
				of request processing. If this attribute is set to "true", these
				methods are fired instead at the end of the "apply request values"
				phase.</description>
  </attribute>
  <attribute>
   <name>required</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether an input value
				is required. If this value is true, and no input value is provided,
				the error message javax.faces.component.UIInput.REQUIRED is posted.</description>
  </attribute>
  <attribute>
   <name>validator</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting FacesContext,
				UIComponent, and Object parameters, and returning void, that
				validates the component's local value.</description>
  </attribute>
  <attribute>
   <name>valueChangeListener</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting a
				ValueChangeEvent parameter and returning void. The specified method
				is invoked if this component is modified. The phase that this
				handler is fired in can be controlled via the immediate attribute.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>onblur</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element loses focus.</description>
  </attribute>
  <attribute>
   <name>onfocus</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element receives focus.</description>
  </attribute>
  <attribute>
   <name>onchange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element is modified.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
  <attribute>
   <name>maxlength</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The maximum number of characters allowed to
				be entered.</description>
  </attribute>
  <attribute>
   <name>size</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The initial width of this control, in
				characters.</description>
  </attribute>
  <attribute>
   <name>readonly</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, indicates that this component
				cannot be modified by the user. The element may receive focus unless
				it has also been disabled.</description>
  </attribute>
  <attribute>
   <name>disabled</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, this element cannot receive focus.</description>
  </attribute>
  <!-- AutoComplete -->
  <attribute>
   <name>minChars</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>max</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>highlight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>scroll</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>selectFirst</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>autoFill</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>mustMatch</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>matchContains</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>multiple</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>scrollHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>multipleSeparator</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>formatItem</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>formatMatch</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>formatResult</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>jsonValue</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>oncomplete</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>accordionPanel</name>
  <tag-class>org.jquery4jsf.custom.accordion.AccordionPanelTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>onblur</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element loses focus.</description>
  </attribute>
  <attribute>
   <name>onfocus</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element receives focus.</description>
  </attribute>
  <attribute>
   <name>onchange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element is modified.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
  <attribute>
   <name>oncomplete</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>active</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>animated</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>autoHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>clearStyle</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>collapsible</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>event</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>fillSpace</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>icons</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>navigation</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>accordionSubPanel</name>
  <tag-class>org.jquery4jsf.custom.accordion.AccordionSubPanelTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>panelName</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>outputScript</name>
  <tag-class>org.jquery4jsf.custom.outputscript.OutputScriptTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>src</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>type</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>defer</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>charset</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>datePicker</name>
  <tag-class>org.jquery4jsf.custom.datepicker.DatePickerTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The initial value of this component.</description>
  </attribute>
  <attribute>
   <name>converter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>An expression that specifies the Converter for this
				component. If the value binding expression is a String, the String
				is used as an ID to look up a Converter. If the value binding
				expression is a Converter, uses that instance as the converter. The
				value can either be a static value (ID case only) or an EL
				expression.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				value change events should fire. During normal event processing,
				value change events are fired during the "invoke application" phase
				of request processing. If this attribute is set to "true", these
				methods are fired instead at the end of the "apply request values"
				phase.</description>
  </attribute>
  <attribute>
   <name>required</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether an input value
				is required. If this value is true, and no input value is provided,
				the error message javax.faces.component.UIInput.REQUIRED is posted.</description>
  </attribute>
  <attribute>
   <name>validator</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting FacesContext,
				UIComponent, and Object parameters, and returning void, that
				validates the component's local value.</description>
  </attribute>
  <attribute>
   <name>valueChangeListener</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting a
				ValueChangeEvent parameter and returning void. The specified method
				is invoked if this component is modified. The phase that this
				handler is fired in can be controlled via the immediate attribute.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>onblur</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element loses focus.</description>
  </attribute>
  <attribute>
   <name>onfocus</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element receives focus.</description>
  </attribute>
  <attribute>
   <name>onchange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element is modified.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
  <attribute>
   <name>maxlength</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The maximum number of characters allowed to
				be entered.</description>
  </attribute>
  <attribute>
   <name>size</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The initial width of this control, in
				characters.</description>
  </attribute>
  <attribute>
   <name>readonly</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, indicates that this component
				cannot be modified by the user. The element may receive focus unless
				it has also been disabled.</description>
  </attribute>
  <attribute>
   <name>disabled</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, this element cannot receive focus.</description>
  </attribute>
  <!-- JQuery DatePicker -->
  <attribute>
   <name>altField</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>altFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>appendText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonImage</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonImageOnly</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>changeMonth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>changeYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>closeText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>constrainInput</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>currentText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dateFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNames</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNamesMin</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNamesShort</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>defaultDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>duration</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>firstDay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>gotoCurrent</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>hideIfNoPrevNext</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>maxDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>minDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>monthNames</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>monthNamesShort</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>navigationAsDateFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>nextText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>numberOfMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>prevText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>shortYearCutoff</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showAnim</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showButtonPanel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showCurrentAtPos</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showMonthAfterYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOn</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOptions</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOtherMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>stepMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>yearRange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onbeforeShow</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onbeforeShowDay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onchangeMonthYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onclose</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onselect</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>calendar</name>
  <tag-class>org.jquery4jsf.custom.calendar.CalendarTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The initial value of this component.</description>
  </attribute>
  <attribute>
   <name>converter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>An expression that specifies the Converter for this
				component. If the value binding expression is a String, the String
				is used as an ID to look up a Converter. If the value binding
				expression is a Converter, uses that instance as the converter. The
				value can either be a static value (ID case only) or an EL
				expression.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				value change events should fire. During normal event processing,
				value change events are fired during the "invoke application" phase
				of request processing. If this attribute is set to "true", these
				methods are fired instead at the end of the "apply request values"
				phase.</description>
  </attribute>
  <attribute>
   <name>required</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether an input value
				is required. If this value is true, and no input value is provided,
				the error message javax.faces.component.UIInput.REQUIRED is posted.</description>
  </attribute>
  <attribute>
   <name>validator</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting FacesContext,
				UIComponent, and Object parameters, and returning void, that
				validates the component's local value.</description>
  </attribute>
  <attribute>
   <name>valueChangeListener</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A method binding EL expression, accepting a
				ValueChangeEvent parameter and returning void. The specified method
				is invoked if this component is modified. The phase that this
				handler is fired in can be controlled via the immediate attribute.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
  <!-- HTML 4.0 event-handler attributes -->
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				clicked.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the element is
				double-clicked.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is pressed over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is released over this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved into this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moved while it is in this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when the pointing device
				is moves out of this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is pressed
				down over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: Script to be invoked when a key is released
				over this element.</description>
  </attribute>
  <!-- HTML 4.0 button attributes -->
  <attribute>
   <name>accesskey</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Sets the access key for this element.</description>
  </attribute>
  <attribute>
   <name>onblur</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element loses focus.</description>
  </attribute>
  <attribute>
   <name>onfocus</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element receives focus.</description>
  </attribute>
  <attribute>
   <name>onchange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies a script to be invoked when the
				element is modified.</description>
  </attribute>
  <attribute>
   <name>tabindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: Specifies the position of this element within
				the tab order of the document.</description>
  </attribute>
  <attribute>
   <name>maxlength</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The maximum number of characters allowed to
				be entered.</description>
  </attribute>
  <attribute>
   <name>size</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: The initial width of this control, in
				characters.</description>
  </attribute>
  <attribute>
   <name>readonly</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, indicates that this component
				cannot be modified by the user. The element may receive focus unless
				it has also been disabled.</description>
  </attribute>
  <attribute>
   <name>disabled</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>HTML: When true, this element cannot receive focus.</description>
  </attribute>
  <!-- JQuery DatePicker -->
  <attribute>
   <name>altField</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>altFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>appendText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonImage</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonImageOnly</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttonText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>changeMonth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>changeYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>closeText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>constrainInput</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>currentText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dateFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNames</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNamesMin</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dayNamesShort</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>defaultDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>duration</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>firstDay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>gotoCurrent</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>hideIfNoPrevNext</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>maxDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>minDate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>monthNames</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>monthNamesShort</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>navigationAsDateFormat</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>nextText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>numberOfMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>prevText</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>shortYearCutoff</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showAnim</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showButtonPanel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showCurrentAtPos</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showMonthAfterYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOn</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOptions</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>showOtherMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>stepMonths</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>yearRange</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onbeforeShow</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onbeforeShowDay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onchangeMonthYear</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onclose</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>onselect</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>dialog</name>
  <tag-class>org.jquery4jsf.custom.dialog.DialogTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>resources</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>autoOpen</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>bgiframe</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>buttons</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>closeOnEscape</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>dialogClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>draggable</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>height</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>hide</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>maxHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>maxWidth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>minHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>minWidth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>modal</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>position</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>resizable</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>show</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>stack</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>width</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>zindex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>progressBar</name>
  <tag-class>org.jquery4jsf.custom.progressbar.ProgressBarTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique
				within the scope of the tag's enclosing naming
				container (e.g.
				h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate
				subclass) to bind to this component
				instance. This value must be an
				EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered.
				Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>resizable</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>tabbedPanel</name>
  <tag-class>org.jquery4jsf.custom.tabbedpanel.TabbedPanelTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique
				within the scope of the tag's enclosing naming
				container (e.g.
				h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate
				subclass) to bind to this component
				instance. This value must be an
				EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered.
				Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>ajaxOptions</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>cache</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>collapsible</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>cookie</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>deselectable</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>event</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>fx</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>idPrefix</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>selected</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>spinner</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>tabPanel</name>
  <tag-class>org.jquery4jsf.custom.tabbedpanel.TabPanelTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique
				within the scope of the tag's enclosing naming
				container (e.g.
				h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate
				subclass) to bind to this component
				instance. This value must be an
				EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered.
				Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>disabled</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>ajaxSupport</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>ajaxSource</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>tabName</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>div</name>
  <tag-class>org.jquery4jsf.custom.panel.HtmlDivTag</tag-class>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique within the scope of the tag's enclosing naming
				container (e.g. h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate subclass) to bind to this component
				instance. This value must be an EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered. Default value: true.</description>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that identifies the phase during which
				action events should fire. During normal event processing, action
				methods and action listener methods are fired during the "invoke
				application" phase of request processing. If this attribute is set
				to "true", these methods are fired instead at the end of the "apply
				request values" phase.</description>
  </attribute>
  <!-- HTML 4.0 universal attributes -->
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The direction of text display, either 'ltr'
				(left-to-right) or 'rtl' (right-to-left).</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: The base language of this document.</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: CSS styling instructions.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>HTML: An advisory title for this element. Often
				used by the user agent as a tooltip.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The CSS class for this element. Corresponds to the
				HTML 'class' attribute.</description>
  </attribute>
 </tag>
 <tag>
  <name>slider</name>
  <tag-class>org.jquery4jsf.custom.slider.SliderTag</tag-class>
  <body-content>JSP</body-content>
  <!-- UIComponent attributes -->
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The developer-assigned ID of this component. The ID
				must be unique
				within the scope of the tag's enclosing naming
				container (e.g.
				h:form or f:subview). This value must be a static
				value.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Identifies a backing bean property (of type
				UIComponent or appropriate
				subclass) to bind to this component
				instance. This value must be an
				EL expression.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A boolean value that indicates whether this component
				should be rendered.
				Default value: true.</description>
  </attribute>
  <!-- JQuery -->
  <attribute>
   <name>resources</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>animate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>max</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>min</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>orientation</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>range</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>step</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>values</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>carousel</name>
  <tag-class>org.jquery4jsf.custom.carousel.CarouselTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>vertical</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Specifies wether the carousel appears in horizontal or vertical orientation. Changes the carousel from a left/right style to a up/down style carousel.</description>
  </attribute>
  <attribute>
   <name>skin</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Default Skin tango or ie7</description>
  </attribute>
  <attribute>
   <name>skinCss</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>resource css for skin</description>
  </attribute>
  <attribute>
   <name>skinStyleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>style class for skin</description>
  </attribute>
  <attribute>
   <name>start</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The index of the item to start with.</description>
  </attribute>
  <attribute>
   <name>offset</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The index of the first available item at initialisation.</description>
  </attribute>
  <attribute>
   <name>size</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The number of total items.</description>
  </attribute>
  <attribute>
   <name>scroll</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The number of items to scroll by.</description>
  </attribute>
  <attribute>
   <name>visible</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>If passed, the width/height of the items will be calculated and set depending on the width/height of the clipping, so that exactly that number of items will be visible.</description>
  </attribute>
  <attribute>
   <name>animation</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The speed of the scroll animation as string in jQuery terms ("slow" or "fast") or milliseconds as integer (See jQuery Documentation). If set to 0, animation is turned off.</description>
  </attribute>
  <attribute>
   <name>easing</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The name of the easing effect that you want to use (See jQuery Documentation).</description>
  </attribute>
  <attribute>
   <name>auto</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Specifies how many seconds to periodically autoscroll the content. If set to 0 (default) then autoscrolling is turned off.</description>
  </attribute>
  <attribute>
   <name>wrap</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies whether to wrap at the first/last item (or both) and jump back to the start/end. Options are "first", "last" or "both" as string. If set to null, wrapping is turned off (default). You can also pass "circular" as option to enable support for circular carousels. See the example Circular carousel on how to implement it.</description>
  </attribute>
  <attribute>
   <name>initCallback</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called right after initialisation of the carousel. Two parameters are passed: The instance of the requesting carousel and the state of the carousel initialisation (init, reset or reload)</description>
  </attribute>
  <attribute>
   <name>itemLoadCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when the carousel requests a set of items to be loaded. Two parameters are passed: The instance of the requesting carousel and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemLoadCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when the carousel requests a set of items to be loaded. Two parameters are passed: The instance of the requesting carousel and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemFirstInCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item becomes the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemFirstInCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item becomes the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemFirstOutCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item isn't longer the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemFirstOutCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item isn't longer the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemLastInCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item becomes the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemLastInCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item becomes the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemLastOutCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when an item isn't longer the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemLastOutCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when an item isn't longer the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemVisibleInCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item is in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemVisibleInCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item is in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemVisibleOutCallbackBefore</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item isn't longer in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>itemVisibleOutCallbackAfter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called (after the scroll animation) when an item isn't longer in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the &lt;li&gt; object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation</description>
  </attribute>
  <attribute>
   <name>buttonNextCallback</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when the state of the 'next' control is changing. The responsibility of this method is to enable or disable the 'next' control. Three parameters are passed: The instance of the requesting carousel, the control element and a flag indicating whether the button should be enabled or disabled.</description>
  </attribute>
  <attribute>
   <name>buttonPrevCallback</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>JavaScript function that is called when the state of the 'previous' control is changing. The responsibility of this method is to enable or disable the 'previous' control. Three parameters are passed: The instance of the requesting carousel, the control element and a flag indicating whether the button should be enabled or disabled.</description>
  </attribute>
  <attribute>
   <name>buttonNextEvent</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies the event which triggers the next scroll.</description>
  </attribute>
  <attribute>
   <name>buttonPrevEvent</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies the event which triggers the prev scroll.</description>
  </attribute>
 </tag>
 <tag>
  <name>draggable</name>
  <tag-class>org.jquery4jsf.custom.draggable.DraggableTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>addClasses</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to false, will prevent the ui-draggable class from being added. This may be desired as a performance optimization when calling .draggable() init on many hundreds of elements.</description>
  </attribute>
  <attribute>
   <name>appendTo</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The element passed to or selected by the appendTo option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable.</description>
  </attribute>
  <attribute>
   <name>axis</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y'</description>
  </attribute>
  <attribute>
   <name>cancel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Prevents dragging from starting on specified elements.</description>
  </attribute>
  <attribute>
   <name>connectToSortable</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Allows the draggable to be dropped onto the specified sortables. If this option is used (helper must be set to 'clone' in order to work flawlessly), a draggable can be dropped onto a sortable list and then becomes part of it</description>
  </attribute>
  <attribute>
   <name>containment</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Constrains dragging to within the bounds of the specified element or region. Possible string values: 'parent', 'document', 'window', [x1, y1, x2, y2].</description>
  </attribute>
  <attribute>
   <name>cursor</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Initialize a draggable with the cursor option specified.</description>
  </attribute>
  <attribute>
   <name>cursorAt</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Moves the dragging helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: { top, left, right, bottom }.</description>
  </attribute>
  <attribute>
   <name>delay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</description>
  </attribute>
  <attribute>
   <name>distance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</description>
  </attribute>
  <attribute>
   <name>grid</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Snaps the dragging helper to a grid, every x and y pixels. Array values: [x, y]</description>
  </attribute>
  <attribute>
   <name>handle</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified, restricts drag start click to the specified element(s).</description>
  </attribute>
  <attribute>
   <name>helper</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Allows for a helper element to be used for dragging display. Possible values: 'original', 'clone', Function. If a function is specified, it must return a DOMElement.</description>
  </attribute>
  <attribute>
   <name>iframeFix</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Prevent iframes from capturing the mousemove events during a drag. Useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. If set to true, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them.</description>
  </attribute>
  <attribute>
   <name>opacity</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.Float</type>
   <description>Opacity for the helper while being dragged.</description>
  </attribute>
  <attribute>
   <name>refreshPositions</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.</description>
  </attribute>
  <attribute>
   <name>revert</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set to true, the element will return to its start position when dragging stops. Possible string values: 'valid', 'invalid'. If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around.</description>
  </attribute>
  <attribute>
   <name>revertDuration</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The duration of the revert animation, in milliseconds. Ignored if revert is false.</description>
  </attribute>
  <attribute>
   <name>scope</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted by the droppable.</description>
  </attribute>
  <attribute>
   <name>scroll</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to true, container auto-scrolls while dragging.</description>
  </attribute>
  <attribute>
   <name>scrollSensitivity</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.</description>
  </attribute>
  <attribute>
   <name>scrollSpeed</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance.</description>
  </attribute>
  <attribute>
   <name>snap</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set to a selector or to true (equivalent to '.ui-draggable'), the draggable will snap to the edges of the selected elements when near an edge of the element.</description>
  </attribute>
  <attribute>
   <name>snapMode</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Determines which edges of snap elements the draggable will snap to. Ignored if snap is false. Possible values: 'inner', 'outer', 'both'</description>
  </attribute>
  <attribute>
   <name>snapTolerance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The distance in pixels from the snap element edges at which snapping should occur. Ignored if snap is false.</description>
  </attribute>
  <attribute>
   <name>stack</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Controls the z-Index of the defined group (key 'group' in the hash, accepts jQuery selector) automatically, always brings to front the dragged item. Very useful in things like window managers. Optionally, a 'min' key can be set, so the zIndex cannot go below that value.</description>
  </attribute>
  <attribute>
   <name>zIndex</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>z-index for the helper while being dragged.</description>
  </attribute>
  <attribute>
   <name>ondragstart</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered when dragging starts.</description>
  </attribute>
  <attribute>
   <name>ondrag</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered when the mouse is moved during the dragging.</description>
  </attribute>
  <attribute>
   <name>ondragstop</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered when dragging stops.</description>
  </attribute>
 </tag>
 <tag>
  <name>droppable</name>
  <tag-class>org.jquery4jsf.custom.droppable.DroppableTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>for</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set add draggable property on component where id is igual</description>
  </attribute>
  <attribute>
   <name>accept</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>All draggables that match the selector will be accepted. If a function is specified, the function will be called for each draggable on the page (passed as the first argument to the function), to provide a custom filter. The function should return true if the draggable should be accepted.</description>
  </attribute>
  <attribute>
   <name>activeClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified, the class will be added to the droppable while an acceptable draggable is being dragged.</description>
  </attribute>
  <attribute>
   <name>addClasses</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to false, will prevent the ui-droppable class from being added. This may be desired as a performance optimization when calling .droppable() init on many hundreds of elements.</description>
  </attribute>
  <attribute>
   <name>greedy</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If true, will prevent event propagation on nested droppables.</description>
  </attribute>
  <attribute>
   <name>hoverClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified, the class will be added to the droppable while an acceptable draggable is being hovered.</description>
  </attribute>
  <attribute>
   <name>scope</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted.</description>
  </attribute>
  <attribute>
   <name>tolerance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'. * fit: draggable overlaps the droppable entirely * intersect: draggable overlaps the droppable at least 50% * pointer: mouse pointer overlaps the droppable * touch: draggable overlaps the droppable any amount</description>
  </attribute>
  <attribute>
   <name>ondropactivate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered any time an accepted draggable starts dragging. This can be useful if you want to make the droppable 'light up' when it can be dropped on.</description>
  </attribute>
  <attribute>
   <name>ondropdeactivate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered any time an accepted draggable stops dragging.</description>
  </attribute>
  <attribute>
   <name>ondropover</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered as an accepted draggable is dragged 'over' (within the tolerance of) this droppable.</description>
  </attribute>
  <attribute>
   <name>ondropout</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered when an accepted draggable is dragged out (within the tolerance of) this droppable.</description>
  </attribute>
  <attribute>
   <name>ondrop</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered when an accepted draggable is dropped 'over' (within the tolerance of) this droppable. In the callback, $(this) represents the droppable the draggable is dropped on. ui.draggable represents the draggable.</description>
  </attribute>
 </tag>
 <tag>
  <name>effect</name>
  <tag-class>org.jquery4jsf.custom.effect.EffectTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>for</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set add draggable property on component where id is igual</description>
  </attribute>
  <attribute>
   <name>effect</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>options</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A object/hash including specific options for the effect.</description>
  </attribute>
  <attribute>
   <name>speed</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A string representing one of the three predefined speeds ("slow", "normal", or "fast") or the number of milliseconds to run the animation (e.g. 1000).</description>
  </attribute>
  <attribute>
   <name>callback</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>A function that is called after the effect is completed.</description>
  </attribute>
  <attribute>
   <name>event</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
  </attribute>
 </tag>
 <tag>
  <name>resizable</name>
  <tag-class>org.jquery4jsf.custom.resizable.ResizableTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>for</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set add draggable property on component where id is igual</description>
  </attribute>
  <attribute>
   <name>alsoResize</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Resize these elements synchronous when resizing.</description>
  </attribute>
  <attribute>
   <name>animateDuration</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Initialize a resizable with the animateDuration option specified.</description>
  </attribute>
  <attribute>
   <name>animateEasing</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Easing effect for animating.</description>
  </attribute>
  <attribute>
   <name>aspectRatio</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5.</description>
  </attribute>
  <attribute>
   <name>autoHide</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to true, automatically hides the handles except when the mouse hovers over the element.</description>
  </attribute>
  <attribute>
   <name>cancel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Prevents resizing if you start on elements matching the selector.</description>
  </attribute>
  <attribute>
   <name>containment</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector.</description>
  </attribute>
  <attribute>
   <name>delay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element.</description>
  </attribute>
  <attribute>
   <name>distance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element.</description>
  </attribute>
  <attribute>
   <name>ghost</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>If set to true, a semi-transparent helper element is shown for resizing.</description>
  </attribute>
  <attribute>
   <name>grid</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]</description>
  </attribute>
  <attribute>
   <name>handles</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>if specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin.If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly.</description>
  </attribute>
  <attribute>
   <name>helper</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.</description>
  </attribute>
  <attribute>
   <name>maxHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>This is the maximum height the resizable should be allowed to resize to.</description>
  </attribute>
  <attribute>
   <name>maxWidth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>This is the maximum width the resizable should be allowed to resize to.</description>
  </attribute>
  <attribute>
   <name>minWidth</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>This is the minimum width the resizable should be allowed to resize to.</description>
  </attribute>
  <attribute>
   <name>minHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>This is the minimum height the resizable should be allowed to resize to.</description>
  </attribute>
  <attribute>
   <name>onstart</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the start of a resize operation.</description>
  </attribute>
  <attribute>
   <name>onresize</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered during the resize, on the drag of the resize handler.</description>
  </attribute>
  <attribute>
   <name>onstop</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the end of a resize operation.</description>
  </attribute>
 </tag>
 <tag>
  <name>selectable</name>
  <tag-class>org.jquery4jsf.custom.selectable.SelectableTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>for</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If set add draggable property on component where id is igual</description>
  </attribute>
  <attribute>
   <name>autoRefresh</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually.</description>
  </attribute>
  <attribute>
   <name>cancel</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Prevents selecting if you start on elements matching the selector.</description>
  </attribute>
  <attribute>
   <name>delay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
  </attribute>
  <attribute>
   <name>distance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance.</description>
  </attribute>
  <attribute>
   <name>filter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>The matching child elements will be made selectees (able to be selected).</description>
  </attribute>
  <attribute>
   <name>tolerance</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Possible values: 'touch', 'fit'.</description>
  </attribute>
  <attribute>
   <name>onselected</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the end of the select operation, on each element added to the selection.</description>
  </attribute>
  <attribute>
   <name>onselecting</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered during the select operation, on each element added to the selection.</description>
  </attribute>
  <attribute>
   <name>onstart</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the beginning of the select operation.</description>
  </attribute>
  <attribute>
   <name>stop</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the end of the select operation.</description>
  </attribute>
  <attribute>
   <name>onunselected</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered at the end of the select operation.</description>
  </attribute>
  <attribute>
   <name>onunselecting</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>This event is triggered during the select operation, on each element removed from the selection.</description>
  </attribute>
 </tag>
 <tag>
  <name>tooltip</name>
  <tag-class>org.jquery4jsf.custom.tooltip.TooltipTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>delay</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The number of milliseconds before a tooltip is display.</description>
  </attribute>
  <attribute>
   <name>track</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If true, let the tooltip track the mousemovement.</description>
  </attribute>
  <attribute>
   <name>showURL</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If true, shows the href or src attribute within div.url.</description>
  </attribute>
  <attribute>
   <name>showBody</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified, uses the String to split the title, displaying the first part in the h3 tag, all following in the div.body tag, separated with s</description>
  </attribute>
  <attribute>
   <name>onbodyHandler</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified its called to format the tooltip-body, hiding the title-part. The callback can return a HTML-String, a DOM element or a jQuery object.</description>
  </attribute>
  <attribute>
   <name>extraClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If specified, adds the class to the tooltip helper.</description>
  </attribute>
  <attribute>
   <name>top</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The top-offset for the tooltip position. 0 is the mouse position.</description>
  </attribute>
  <attribute>
   <name>fixPNG</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>If true, fixes transparent background-image PNGs in IE.</description>
  </attribute>
  <attribute>
   <name>left</name>
   <rtexprvalue>false</rtexprvalue>
   <type>int</type>
   <description>The left-offset for the tooltip position. 0 is the mouse position.</description>
  </attribute>
 </tag>
 <tag>
  <name>panel</name>
  <tag-class>org.jquery4jsf.custom.panel.PanelTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>Boolean value to specify the visibility of the component</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.component.UIComponent</type>
   <description>An EL expression that maps to a server-side component instance in a backing bean</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.</description>
  </attribute>
  <attribute>
   <name>header</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Header text of the panel</description>
  </attribute>
  <attribute>
   <name>headerClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Style class of the panel header</description>
  </attribute>
  <attribute>
   <name>contentClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Style class of the panel content</description>
  </attribute>
 </tag>
 <tag>
  <name>ajaxEvent</name>
  <tag-class>org.jquery4jsf.custom.ajax.AjaxEventTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.Object</type>
   <description>Value of the component that can be either an EL expression or a literal text</description>
  </attribute>
  <attribute>
   <name>actionListener</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.event.ActionListener</type>
  </attribute>
  <attribute>
   <name>action</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.el.MethodBinding</type>
  </attribute>
  <attribute>
   <name>immediate</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
  </attribute>
  <attribute>
   <name>reRender</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Update the component by id</description>
  </attribute>
  <attribute>
   <name>event</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>add event to ajax event</description>
  </attribute>
  <attribute>
   <name>partialSubmit</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>add event to ajax event</description>
  </attribute>
 </tag>
 <tag>
  <name>paragraph</name>
  <tag-class>org.jquery4jsf.custom.paragraph.ParagraphTag</tag-class>
  <body-content>JSP</body-content>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.Object</type>
   <description>Value of the component that can be either an EL expression or a literal text</description>
  </attribute>
  <attribute>
   <name>converter</name>
   <rtexprvalue>false</rtexprvalue>
   <type>javax.faces.convert.Converter</type>
   <description>An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id</description>
  </attribute>
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Html dir attribute of the input text</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies a language code for the content in an element</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies extra information about an element</description>
  </attribute>
  <attribute>
   <name>xmlLang</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Specifies a language code for the content in an element, in XHTML documents</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <type>java.lang.String</type>
   <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.</description>
  </attribute>
 </tag>
</taglib>
