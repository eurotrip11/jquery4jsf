<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
	 "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib xmlns="http://java.sun.com/JSP/TagLibraryDescriptor">
	<tlib-version>1.3</tlib-version>
	<jsp-version>1.2</jsp-version>
	<short-name>jq</short-name>
	<uri>http://www.jquery4jsf.org/jsf</uri>
	<tag>
		<name>abbr</name>
		<tag-class>org.jquery4jsf.custom.html.HtmlAbbrTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies extra information about an element]]></description>
		</attribute>
		<attribute>
			<name>xmlLang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element, in XHTML documents]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>accordionPanel</name>
		<tag-class>org.jquery4jsf.custom.accordion.AccordionPanelTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>active</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>animated</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>autoHeight</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>clearStyle</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapsible</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>event</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>fillSpace</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>icons</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>navigation</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>header</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>navigationFilter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onaccordionchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>accordionSubPanel</name>
		<tag-class>org.jquery4jsf.custom.accordion.AccordionSubPanelTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>panelName</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>acronym</name>
		<tag-class>org.jquery4jsf.custom.html.HtmlAcronymTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies extra information about an element]]></description>
		</attribute>
		<attribute>
			<name>xmlLang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element, in XHTML documents]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>address</name>
		<tag-class>org.jquery4jsf.custom.html.HtmlAddressTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies extra information about an element]]></description>
		</attribute>
		<attribute>
			<name>xmlLang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element, in XHTML documents]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>ajaxEvent</name>
		<tag-class>org.jquery4jsf.custom.ajax.AjaxEventTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<required>false</required>
				<type>javax.faces.event.ActionListener</type>
		</attribute>
		<attribute>
			<name>action</name>
			<required>false</required>
				<type>javax.faces.el.MethodBinding</type>
		</attribute>
		<attribute>
			<name>immediate</name>
			<required>false</required>
				<type>boolean</type>
		</attribute>
		<attribute>
			<name>reRender</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Update the component by id]]></description>
		</attribute>
		<attribute>
			<name>event</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[add event to ajax event]]></description>
		</attribute>
		<attribute>
			<name>partialSubmit</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[add event to ajax event]]></description>
		</attribute>
	</tag>
	<tag>
		<name>ajaxStatus</name>
		<tag-class>org.jquery4jsf.custom.ajax.AjaxStatusTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>onajaxStart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is broadcast if an Ajax request is started and no other Ajax requests are currently running.]]></description>
		</attribute>
		<attribute>
			<name>onajaxSuccess</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is also only called if the request was successful.]]></description>
		</attribute>
		<attribute>
			<name>onajaxError</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This global event behaves the same as the local error event.]]></description>
		</attribute>
		<attribute>
			<name>onajaxComplete</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event behaves the same as the complete event and will be triggered every time an Ajax request finishes.]]></description>
		</attribute>
		<attribute>
			<name>onajaxStop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This global event is triggered if there are no more Ajax requests being processed.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>autoComplete</name>
		<tag-class>org.jquery4jsf.custom.autocomplete.AutoCompleteTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value that specifies the lifecycle phase the valueChangeEvents should be processed, when true the events will be fired at "apply request values", if immediate is set to false, valueChangeEvents are fired in "process validations" phase. Default is false]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value that makes the component required, default value is false]]></description>
		</attribute>
		<attribute>
			<name>validator</name>
			<required>false</required>
				<type>javax.faces.validator.Validator</type>
			<description><![CDATA[A method binding EL expression that refers to a method for validating the input]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<required>false</required>
				<type>javax.faces.event.ValueChangeListener</type>
			<description><![CDATA[A method binding EL expression that refers to a method for handling a value change event]]></description>
		</attribute>
		<attribute>
			<name>requiredMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when required field validation fails]]></description>
		</attribute>
		<attribute>
			<name>converterMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when conversion fails]]></description>
		</attribute>
		<attribute>
			<name>validatorMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when validation fails]]></description>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html accesskey attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html alt attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html disabled attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html lang attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>maxlength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html maxlength attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onblur attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onchange attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html ondblclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onfocus attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeydown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeypress attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeyup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousedown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousemove attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseout attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseover attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>readonly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html readonly attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html size attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html style attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html class attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html tabindex attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>jsonValue</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[json value]]></description>
		</attribute>
		<attribute>
			<name>oncomplete</name>
			<required>false</required>
				<type>javax.faces.el.MethodBinding</type>
			<description><![CDATA[ajax action to server for data]]></description>
		</attribute>
		<attribute>
			<name>minChars</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The minimum number of characters a user has to type before the autocompleter activates.]]></description>
		</attribute>
		<attribute>
			<name>delay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The delay in milliseconds the autocompleter waits after a keystroke to activate itself.]]></description>
		</attribute>
		<attribute>
			<name>cacheLength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The number of backend query results to store in cache. If set to 1 (the current result), no caching will happen. Must be >= 1.]]></description>
		</attribute>
		<attribute>
			<name>matchSubset</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether or not the autocompleter can use a cache for more specific queries. This means that all matches of "foot" are a subset of all matches for "foo". Usually this is true, and using this options decreases server load and increases performance. Only useful with cacheLength settings bigger than one, like 10.]]></description>
		</attribute>
		<attribute>
			<name>matchCase</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether or not the comparison is case sensitive. Important only if you use caching.]]></description>
		</attribute>
		<attribute>
			<name>matchContains</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether or not the comparison looks inside (i.e. does "ba" match "foo bar") the search results. Important only if you use caching. Don't mix with autofill.]]></description>
		</attribute>
		<attribute>
			<name>mustMatch</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, the autocompleter will only allow results that are presented by the backend. Note that illegal values result in an empty input box.]]></description>
		</attribute>
		<attribute>
			<name>selectFirst</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If this is set to true, the first autocomplete value will be automatically selected on tab/return, even if it has not been handpicked by keyboard or mouse action. If there is a handpicked (highlighted) result, that result will take precedence.]]></description>
		</attribute>
		<attribute>
			<name>extraParams</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Extra parameters for the backend. If you were to specify { bar:4 }, the autocompleter would call my_autocomplete_backend.php?q=foo&bar=4 (assuming the input box contains "foo"). The param can be a function that is called to calculate the param before each request.]]></description>
		</attribute>
		<attribute>
			<name>onformatItem</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Provides advanced markup for an item. For each row of results, this function will be called. The returned value will be displayed inside an LI element in the results list. Autocompleter will provide 4 parameters: the results row, the position of the row in the list of results (starting at 1), the number of items in the list of results and the search term.]]></description>
		</attribute>
		<attribute>
			<name>onformatMatch</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Use this option if you want to limit the data that autocomplete searches for matches. For example, there may be items you want displayed to the user, but don't want included in the data that's searched. Gets called with the same arguments as formatItem.]]></description>
		</attribute>
		<attribute>
			<name>onformatResult</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Similar to formatItem, but provides the formatting for the value to be put into the input field. Again three arguments: Data, position (starting with one) and total number of data.]]></description>
		</attribute>
		<attribute>
			<name>multiple</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether to allow more than one autocompleted-value to enter.]]></description>
		</attribute>
		<attribute>
			<name>multipleSeparator</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Seperator to put between values when using multiple option.]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Specify a custom width for the select box.]]></description>
		</attribute>
		<attribute>
			<name>autoFill</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Fill the textinput while still selecting a value, replacing the value if more is typed or something else is selected.]]></description>
		</attribute>
		<attribute>
			<name>max</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Limit the number of items in the select box. Is also sent as a "limit" parameter with a remote request.]]></description>
		</attribute>
		<attribute>
			<name>highlight</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Whether and how to highlight matches in the select box. Set to false to disable. Set to a function to customize. The function gets the value as the first argument and the search term as the second and must return the formatted value.]]></description>
		</attribute>
		<attribute>
			<name>scroll</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether to scroll when more results than configured via scrollHeight are available.]]></description>
		</attribute>
		<attribute>
			<name>scrollHeight</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[height of scrolled autocomplete control in pixels]]></description>
		</attribute>
	</tag>
	<tag>
		<name>button</name>
		<tag-class>org.jquery4jsf.custom.button.ButtonTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<required>false</required>
				<type>javax.faces.event.ActionListener</type>
		</attribute>
		<attribute>
			<name>action</name>
			<required>false</required>
				<type>javax.faces.el.MethodBinding</type>
		</attribute>
		<attribute>
			<name>immediate</name>
			<required>false</required>
				<type>boolean</type>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html accesskey attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html alt attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html disabled attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>image</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Image of the command button]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html lang attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onblur attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onchange attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onclick attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html ondblclick attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onfocus attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeydown attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeypress attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeyup attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousedown attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousemove attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseout attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseover attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseup attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>onselect</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onselect attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>readonly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html readonly attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html style attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html class attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html tabindex attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the command button]]></description>
		</attribute>
		<attribute>
			<name>partialSubmit</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>target</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Identifies the element(s) in the page to be updated with the server response. This value may be specified as a jQuery selection string, a jQuery object, or a DOM element. Default value: null]]></description>
		</attribute>
		<attribute>
			<name>url</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[URL to which the form data will be submitted. Default value: value of form's action attribute]]></description>
		</attribute>
		<attribute>
			<name>typeSubmit</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The method in which the form data should be submitted, 'GET' or 'POST'. Default value: value of form's method attribute (or 'GET' if none found)]]></description>
		</attribute>
		<attribute>
			<name>onbeforeSubmit</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function to be invoked before the form is submitted. The 'beforeSubmit' callback can be provided as a hook for running pre-submit logic or for validating the form data. If the 'beforeSubmit' callback returns false then the form will not be submitted. The 'beforeSubmit' callback is invoked with three arguments: the form data in array format, the jQuery object for the form, and the Options Object passed into ajaxForm/ajaxSubmit.]]></description>
		</attribute>
		<attribute>
			<name>onsuccess</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function to be invoked after the form has been submitted. If a 'success' callback function is provided it is invoked after the response has been returned from the server. It is passed the responseText or responseXML value (depending on the value of the dataType option).]]></description>
		</attribute>
		<attribute>
			<name>dataType</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Expected data type of the response. One of: null, 'xml', 'script', or 'json'. The dataType option provides a means for specifying how the server response should be handled. This maps directly to the jQuery.httpData method. The following values are supported: 'xml': if dataType == 'xml' the server response is treated as XML and the 'success' callback method, if specified, will be passed the responseXML value 'json': if dataType == 'json' the server response will be evaluted and passed to the 'success' callback, if specified 'script': if dataType == 'script' the server response is evaluated in the global context]]></description>
		</attribute>
		<attribute>
			<name>semantic</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean flag indicating whether data must be submitted in strict semantic order (slower). Note that the normal form serialization is done in semantic order with the exception of input elements of type="image". You should only set the semantic option to true if your server has strict semantic requirements and your form contains an input element of type="image".]]></description>
		</attribute>
		<attribute>
			<name>resetForm</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean flag indicating whether the form should be reset if the submit is successful Default value: null]]></description>
		</attribute>
		<attribute>
			<name>clearForm</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean flag indicating whether the form should be cleared if the submit is successful Default value: null]]></description>
		</attribute>
		<attribute>
			<name>iframe</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean flag indicating whether the form should always target the server response to an iframe. This is useful in conjuction with file uploads. See the File Uploads documentation on the Code Samples page for more info. Default value: false]]></description>
		</attribute>
	</tag>
	<tag>
		<name>calendar</name>
		<tag-class>org.jquery4jsf.custom.calendar.CalendarTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>immediate</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value that specifies the lifecycle phase the valueChangeEvents should be processed, when true the events will be fired at "apply request values", if immediate is set to false, valueChangeEvents are fired in "process validations" phase. Default is false]]></description>
		</attribute>
		<attribute>
			<name>required</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value that makes the component required, default value is false]]></description>
		</attribute>
		<attribute>
			<name>validator</name>
			<required>false</required>
				<type>javax.faces.validator.Validator</type>
			<description><![CDATA[A method binding EL expression that refers to a method for validating the input]]></description>
		</attribute>
		<attribute>
			<name>valueChangeListener</name>
			<required>false</required>
				<type>javax.faces.event.ValueChangeListener</type>
			<description><![CDATA[A method binding EL expression that refers to a method for handling a value change event]]></description>
		</attribute>
		<attribute>
			<name>requiredMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when required field validation fails]]></description>
		</attribute>
		<attribute>
			<name>converterMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when conversion fails]]></description>
		</attribute>
		<attribute>
			<name>validatorMessage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Message to be displayed when validation fails]]></description>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html accesskey attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html alt attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html disabled attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html lang attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>maxlength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html maxlength attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onblur attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onchange attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html ondblclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onfocus attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeydown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeypress attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeyup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousedown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousemove attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseout attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseover attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>readonly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html readonly attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html size attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html style attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html class attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html tabindex attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>altField</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>altFormat</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>appendText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonImage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonImageOnly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>changeMonth</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>changeYear</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>closeText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>constrainInput</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>currentText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dateFormat</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNames</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNamesMin</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNamesShort</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>defaultDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>duration</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>firstDay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>gotoCurrent</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>hideIfNoPrevNext</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>maxDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>minDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>monthNames</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>monthNamesShort</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>navigationAsDateFormat</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>nextText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>numberOfMonths</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>prevText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>shortYearCutoff</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showAnim</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showButtonPanel</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showCurrentAtPos</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showMonthAfterYear</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOn</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOptions</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOtherMonths</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>stepMonths</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>yearRange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onbeforeShow</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onbeforeShowDay</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onchangeMonthYear</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onclose</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onselect</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>carousel</name>
		<tag-class>org.jquery4jsf.custom.carousel.CarouselTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>vertical</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Specifies wether the carousel appears in horizontal or vertical orientation. Changes the carousel from a left/right style to a up/down style carousel.]]></description>
		</attribute>
		<attribute>
			<name>skin</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Default Skin tango or ie7]]></description>
		</attribute>
		<attribute>
			<name>skinCss</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[resource css for skin]]></description>
		</attribute>
		<attribute>
			<name>skinStyleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[style class for skin]]></description>
		</attribute>
		<attribute>
			<name>start</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The index of the item to start with.]]></description>
		</attribute>
		<attribute>
			<name>offset</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The index of the first available item at initialisation.]]></description>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The number of total items.]]></description>
		</attribute>
		<attribute>
			<name>scroll</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The number of items to scroll by.]]></description>
		</attribute>
		<attribute>
			<name>visible</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[If passed, the width/height of the items will be calculated and set depending on the width/height of the clipping, so that exactly that number of items will be visible.]]></description>
		</attribute>
		<attribute>
			<name>animation</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The speed of the scroll animation as string in jQuery terms ("slow" or "fast") or milliseconds as integer (See jQuery Documentation). If set to 0, animation is turned off.]]></description>
		</attribute>
		<attribute>
			<name>easing</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The name of the easing effect that you want to use (See jQuery Documentation).]]></description>
		</attribute>
		<attribute>
			<name>auto</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Specifies how many seconds to periodically autoscroll the content. If set to 0 (default) then autoscrolling is turned off.]]></description>
		</attribute>
		<attribute>
			<name>wrap</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies whether to wrap at the first/last item (or both) and jump back to the start/end. Options are "first", "last" or "both" as string. If set to null, wrapping is turned off (default). You can also pass "circular" as option to enable support for circular carousels. See the example Circular carousel on how to implement it.]]></description>
		</attribute>
		<attribute>
			<name>initCallback</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called right after initialisation of the carousel. Two parameters are passed: The instance of the requesting carousel and the state of the carousel initialisation (init, reset or reload)]]></description>
		</attribute>
		<attribute>
			<name>itemLoadCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when the carousel requests a set of items to be loaded. Two parameters are passed: The instance of the requesting carousel and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemLoadCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when the carousel requests a set of items to be loaded. Two parameters are passed: The instance of the requesting carousel and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemFirstInCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item becomes the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemFirstInCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item becomes the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemFirstOutCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item isn't longer the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemFirstOutCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item isn't longer the first one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemLastInCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item becomes the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemLastInCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item becomes the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemLastOutCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when an item isn't longer the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemLastOutCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when an item isn't longer the last one in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemVisibleInCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item is in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemVisibleInCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item is in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemVisibleOutCallbackBefore</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item isn't longer in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>itemVisibleOutCallbackAfter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called (after the scroll animation) when an item isn't longer in the visible range of the carousel. Four parameters are passed: The instance of the requesting carousel and the <li> object itself, the index which indicates the position of the item in the list and the state of the carousel action (prev, next or init). Alternatively, you can pass a hash of one or two functions which are triggered before and/or after animation]]></description>
		</attribute>
		<attribute>
			<name>buttonNextCallback</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when the state of the 'next' control is changing. The responsibility of this method is to enable or disable the 'next' control. Three parameters are passed: The instance of the requesting carousel, the control element and a flag indicating whether the button should be enabled or disabled.]]></description>
		</attribute>
		<attribute>
			<name>buttonPrevCallback</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[JavaScript function that is called when the state of the 'previous' control is changing. The responsibility of this method is to enable or disable the 'previous' control. Three parameters are passed: The instance of the requesting carousel, the control element and a flag indicating whether the button should be enabled or disabled.]]></description>
		</attribute>
		<attribute>
			<name>buttonNextEvent</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the event which triggers the next scroll.]]></description>
		</attribute>
		<attribute>
			<name>buttonPrevEvent</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the event which triggers the prev scroll.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>colorPicker</name>
		<tag-class>org.jquery4jsf.custom.colorpicker.ColorPickerTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html accesskey attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html alt attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html disabled attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html lang attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>maxlength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html maxlength attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onblur attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onchange attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html ondblclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onfocus attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeydown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeypress attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeyup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousedown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousemove attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseout attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseover attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>readonly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html readonly attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html size attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html style attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html class attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html tabindex attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>eventName</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The desired event to trigger the colorpicker. Default: 'click']]></description>
		</attribute>
		<attribute>
			<name>target</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The input field for append the color picker default is parent if parent don't a input]]></description>
		</attribute>
		<attribute>
			<name>color</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The default color. String for hex color or hash for RGB and HSB ({r:255, r:0, b:0}) . Default: 'ff0000']]></description>
		</attribute>
		<attribute>
			<name>flat</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whatever if the color picker is appended to the element or triggered by an event. Default false]]></description>
		</attribute>
		<attribute>
			<name>livePreview</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whatever if the color values are filled in the fields while changing values on selector or a field. If false it may improve speed. Default true]]></description>
		</attribute>
		<attribute>
			<name>onShow</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function triggered when the color picker is shown]]></description>
		</attribute>
		<attribute>
			<name>onBeforeShow</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function triggered before the color picker is shown]]></description>
		</attribute>
		<attribute>
			<name>onHide</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function triggered when the color picker is hidden]]></description>
		</attribute>
		<attribute>
			<name>onChange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function triggered when the color is changed]]></description>
		</attribute>
		<attribute>
			<name>onSubmit</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Callback function triggered when the color it is chosen]]></description>
		</attribute>
	</tag>
	<tag>
		<name>column</name>
		<tag-class>org.jquery4jsf.custom.datatable.HtmlColumnTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dataTableEx</name>
		<tag-class>org.jquery4jsf.custom.datatable.HtmlDataTableExTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rows</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Number of rows to display per page]]></description>
		</attribute>
		<attribute>
			<name>first</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Index of the first row to be displayed]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>datePicker</name>
		<tag-class>org.jquery4jsf.custom.datepicker.DatePickerTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>accesskey</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html accesskey attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>alt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html alt attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html disabled attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html lang attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>maxlength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html maxlength attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onblur</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onblur attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onchange attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>ondblclick</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html ondblclick attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onfocus attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeydown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeydown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeypress</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeypress attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onkeyup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onkeyup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousedown</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousedown attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmousemove</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmousemove attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseout attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseover attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>onmouseup</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html onmouseup attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>readonly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Html readonly attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Html size attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html style attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html class attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>tabindex</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html tabindex attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html title attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>altField</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>altFormat</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>appendText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonImage</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonImageOnly</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>buttonText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>changeMonth</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>changeYear</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>closeText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>constrainInput</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>currentText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dateFormat</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNames</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNamesMin</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>dayNamesShort</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>defaultDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>duration</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>firstDay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>gotoCurrent</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>hideIfNoPrevNext</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>maxDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>minDate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>monthNames</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>monthNamesShort</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>navigationAsDateFormat</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>nextText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>numberOfMonths</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>prevText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>shortYearCutoff</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showAnim</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showButtonPanel</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showCurrentAtPos</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showMonthAfterYear</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOn</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOptions</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>showOtherMonths</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>stepMonths</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>yearRange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onbeforeShow</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onbeforeShowDay</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onchangeMonthYear</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onclose</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onselect</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>dialog</name>
		<tag-class>org.jquery4jsf.custom.dialog.DialogTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>autoOpen</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[When autoOpen is true the dialog will open automatically when dialog is called. If false it will stay hidden until .dialog("open") is called on it.]]></description>
		</attribute>
		<attribute>
			<name>bgiframe</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[When true, the bgiframe plugin will be used, to fix the issue in IE6 where select boxes show on top of other elements, regardless of zIndex. Requires including the bgiframe plugin. Future versions may not require a separate plugin.]]></description>
		</attribute>
		<attribute>
			<name>buttons</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies which buttons should be displayed on the dialog. The property key is the text of the button. The value is the callback function for when the button is clicked. The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object.]]></description>
		</attribute>
		<attribute>
			<name>closeOnEscape</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key.]]></description>
		</attribute>
		<attribute>
			<name>dialogClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The specified class name(s) will be added to the dialog, for additional theming.]]></description>
		</attribute>
		<attribute>
			<name>draggable</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, the dialog will be draggable will be draggable by the titlebar.]]></description>
		</attribute>
		<attribute>
			<name>height</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The height of the dialog, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>hide</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The effect to be used when the dialog is closed.]]></description>
		</attribute>
		<attribute>
			<name>maxHeight</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The maximum height to which the dialog can be resized, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>maxWidth</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The maximum width to which the dialog can be resized, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>minHeight</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The minimum height to which the dialog can be resized, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The minimum width to which the dialog can be resized, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>modal</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements.]]></description>
		</attribute>
		<attribute>
			<name>position</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies where the dialog should be displayed. Possible values: 'center', 'left', 'right', 'top', 'bottom', or an array containing a coordinate pair (in pixel offset from top left of viewport) or the possible string values (e.g. ['right','top'] for top right corner).]]></description>
		</attribute>
		<attribute>
			<name>resizable</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, the dialog will be resizeable.]]></description>
		</attribute>
		<attribute>
			<name>show</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The effect to be used when the dialog is opened.]]></description>
		</attribute>
		<attribute>
			<name>stack</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus.]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the title of the dialog. The title can also be specified by the title attribute on the dialog source element.]]></description>
		</attribute>
		<attribute>
			<name>width</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The width of the dialog, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>zindex</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The width of the dialog, in pixels.]]></description>
		</attribute>
		<attribute>
			<name>onbeforeclose</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when a dialog attempts to close. If the beforeclose event handler (callback function) returns false, the close will be prevented.]]></description>
		</attribute>
		<attribute>
			<name>onopen</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when dialog is opened.]]></description>
		</attribute>
		<attribute>
			<name>onfocus</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the dialog gains focus.]]></description>
		</attribute>
		<attribute>
			<name>ondragStart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the beginning of the dialog being dragged.]]></description>
		</attribute>
		<attribute>
			<name>ondrag</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the dialog is dragged.]]></description>
		</attribute>
		<attribute>
			<name>ondragStop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered after the dialog has been dragged.]]></description>
		</attribute>
		<attribute>
			<name>onresizeStart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the beginning of the dialog being resized.]]></description>
		</attribute>
		<attribute>
			<name>onresize</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the dialog is resized.]]></description>
		</attribute>
		<attribute>
			<name>onresizeStop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered after the dialog has been resized.]]></description>
		</attribute>
		<attribute>
			<name>onclose</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the dialog is closed.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>div</name>
		<tag-class>org.jquery4jsf.custom.panel.HtmlDivTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>draggable</name>
		<tag-class>org.jquery4jsf.custom.draggable.DraggableTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set add draggable property on component where id is igual]]></description>
		</attribute>
		<attribute>
			<name>addClasses</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to false, will prevent the ui-draggable class from being added. This may be desired as a performance optimization when calling .draggable() init on many hundreds of elements.]]></description>
		</attribute>
		<attribute>
			<name>appendTo</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The element passed to or selected by the appendTo option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable.]]></description>
		</attribute>
		<attribute>
			<name>axis</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y']]></description>
		</attribute>
		<attribute>
			<name>cancel</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Prevents dragging from starting on specified elements.]]></description>
		</attribute>
		<attribute>
			<name>connectToSortable</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Allows the draggable to be dropped onto the specified sortables. If this option is used (helper must be set to 'clone' in order to work flawlessly), a draggable can be dropped onto a sortable list and then becomes part of it]]></description>
		</attribute>
		<attribute>
			<name>containment</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Constrains dragging to within the bounds of the specified element or region. Possible string values: 'parent', 'document', 'window', [x1, y1, x2, y2].]]></description>
		</attribute>
		<attribute>
			<name>cursor</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Initialize a draggable with the cursor option specified.]]></description>
		</attribute>
		<attribute>
			<name>cursorAt</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Moves the dragging helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: { top, left, right, bottom }.]]></description>
		</attribute>
		<attribute>
			<name>delay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.]]></description>
		</attribute>
		<attribute>
			<name>distance</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.]]></description>
		</attribute>
		<attribute>
			<name>grid</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Snaps the dragging helper to a grid, every x and y pixels. Array values: [x, y]]]></description>
		</attribute>
		<attribute>
			<name>handle</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If specified, restricts drag start click to the specified element(s).]]></description>
		</attribute>
		<attribute>
			<name>helper</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Allows for a helper element to be used for dragging display. Possible values: 'original', 'clone', Function. If a function is specified, it must return a DOMElement.]]></description>
		</attribute>
		<attribute>
			<name>iframeFix</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Prevent iframes from capturing the mousemove events during a drag. Useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. If set to true, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them.]]></description>
		</attribute>
		<attribute>
			<name>opacity</name>
			<required>false</required>
				<type>java.lang.Float</type>
			<description><![CDATA[Opacity for the helper while being dragged.]]></description>
		</attribute>
		<attribute>
			<name>refreshPositions</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.]]></description>
		</attribute>
		<attribute>
			<name>revert</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set to true, the element will return to its start position when dragging stops. Possible string values: 'valid', 'invalid'. If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around.]]></description>
		</attribute>
		<attribute>
			<name>revertDuration</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The duration of the revert animation, in milliseconds. Ignored if revert is false.]]></description>
		</attribute>
		<attribute>
			<name>scope</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted by the droppable.]]></description>
		</attribute>
		<attribute>
			<name>scroll</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, container auto-scrolls while dragging.]]></description>
		</attribute>
		<attribute>
			<name>scrollSensitivity</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.]]></description>
		</attribute>
		<attribute>
			<name>scrollSpeed</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance.]]></description>
		</attribute>
		<attribute>
			<name>snap</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set to a selector or to true (equivalent to '.ui-draggable'), the draggable will snap to the edges of the selected elements when near an edge of the element.]]></description>
		</attribute>
		<attribute>
			<name>snapMode</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Determines which edges of snap elements the draggable will snap to. Ignored if snap is false. Possible values: 'inner', 'outer', 'both']]></description>
		</attribute>
		<attribute>
			<name>snapTolerance</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The distance in pixels from the snap element edges at which snapping should occur. Ignored if snap is false.]]></description>
		</attribute>
		<attribute>
			<name>stack</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Controls the z-Index of the defined group (key 'group' in the hash, accepts jQuery selector) automatically, always brings to front the dragged item. Very useful in things like window managers. Optionally, a 'min' key can be set, so the zIndex cannot go below that value.]]></description>
		</attribute>
		<attribute>
			<name>zIndex</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[z-index for the helper while being dragged.]]></description>
		</attribute>
		<attribute>
			<name>ondragstart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when dragging starts.]]></description>
		</attribute>
		<attribute>
			<name>ondrag</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the mouse is moved during the dragging.]]></description>
		</attribute>
		<attribute>
			<name>ondragstop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when dragging stops.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>droppable</name>
		<tag-class>org.jquery4jsf.custom.droppable.DroppableTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set add draggable property on component where id is igual]]></description>
		</attribute>
		<attribute>
			<name>accept</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[All draggables that match the selector will be accepted. If a function is specified, the function will be called for each draggable on the page (passed as the first argument to the function), to provide a custom filter. The function should return true if the draggable should be accepted.]]></description>
		</attribute>
		<attribute>
			<name>activeClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If specified, the class will be added to the droppable while an acceptable draggable is being dragged.]]></description>
		</attribute>
		<attribute>
			<name>addClasses</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to false, will prevent the ui-droppable class from being added. This may be desired as a performance optimization when calling .droppable() init on many hundreds of elements.]]></description>
		</attribute>
		<attribute>
			<name>greedy</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If true, will prevent event propagation on nested droppables.]]></description>
		</attribute>
		<attribute>
			<name>hoverClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If specified, the class will be added to the droppable while an acceptable draggable is being hovered.]]></description>
		</attribute>
		<attribute>
			<name>scope</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted.]]></description>
		</attribute>
		<attribute>
			<name>tolerance</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'. * fit: draggable overlaps the droppable entirely * intersect: draggable overlaps the droppable at least 50% * pointer: mouse pointer overlaps the droppable * touch: draggable overlaps the droppable any amount]]></description>
		</attribute>
		<attribute>
			<name>ondropactivate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered any time an accepted draggable starts dragging. This can be useful if you want to make the droppable 'light up' when it can be dropped on.]]></description>
		</attribute>
		<attribute>
			<name>ondropdeactivate</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered any time an accepted draggable stops dragging.]]></description>
		</attribute>
		<attribute>
			<name>ondropover</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered as an accepted draggable is dragged 'over' (within the tolerance of) this droppable.]]></description>
		</attribute>
		<attribute>
			<name>ondropout</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when an accepted draggable is dragged out (within the tolerance of) this droppable.]]></description>
		</attribute>
		<attribute>
			<name>ondrop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when an accepted draggable is dropped 'over' (within the tolerance of) this droppable. In the callback, $(this) represents the droppable the draggable is dropped on. ui.draggable represents the draggable.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>effect</name>
		<tag-class>org.jquery4jsf.custom.effect.EffectTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set add draggable property on component where id is igual]]></description>
		</attribute>
		<attribute>
			<name>effect</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>event</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>options</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[A object/hash including specific options for the effect.]]></description>
		</attribute>
		<attribute>
			<name>speed</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[A string representing one of the three predefined speeds ("slow", "normal", or "fast") or the number of milliseconds to run the animation (e.g. 1000).]]></description>
		</attribute>
		<attribute>
			<name>callback</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[A function that is called after the effect is completed.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>icon</name>
		<tag-class>org.jquery4jsf.custom.icon.IconTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Update the component by id]]></description>
		</attribute>
	</tag>
	<tag>
		<name>outputCss</name>
		<tag-class>org.jquery4jsf.custom.outputcss.OutputCssTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>hreflang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>href</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>media</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>rel</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>charset</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>outputLink</name>
		<tag-class>org.jquery4jsf.custom.html.HtmlOutputLinkTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies extra information about an element]]></description>
		</attribute>
		<attribute>
			<name>xmlLang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element, in XHTML documents]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
		<attribute>
			<name>charset</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the character-set of a linked document]]></description>
		</attribute>
		<attribute>
			<name>coords</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the coordinates of a link]]></description>
		</attribute>
		<attribute>
			<name>hreflang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the language of a linked document]]></description>
		</attribute>
		<attribute>
			<name>name</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the name of an anchor]]></description>
		</attribute>
		<attribute>
			<name>rel</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the relationship between the current document and the linked document]]></description>
		</attribute>
		<attribute>
			<name>rev</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the relationship between the linked document and the current document]]></description>
		</attribute>
		<attribute>
			<name>shape</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies the shape of a link]]></description>
		</attribute>
		<attribute>
			<name>target</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies where to open the linked document]]></description>
		</attribute>
	</tag>
	<tag>
		<name>outputScript</name>
		<tag-class>org.jquery4jsf.custom.outputscript.OutputScriptTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>src</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>defer</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>charset</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>panel</name>
		<tag-class>org.jquery4jsf.custom.panel.PanelTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
		<attribute>
			<name>header</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Header text of the panel]]></description>
		</attribute>
		<attribute>
			<name>headerClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Style class of the panel header]]></description>
		</attribute>
		<attribute>
			<name>contentClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Style class of the panel content]]></description>
		</attribute>
	</tag>
	<tag>
		<name>panelEx</name>
		<tag-class>org.jquery4jsf.custom.panel.PanelExTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
		<attribute>
			<name>header</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Header text of the panel]]></description>
		</attribute>
		<attribute>
			<name>event</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapsible</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapseType</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapsed</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapseSpeed</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>controls</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>widgetClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>headerClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>contentClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>rightboxClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>controlsClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>titleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>titleTextClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>iconClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>hoverClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapsePnlClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>headerIconClpsd</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>headerIcon</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>slideRIconClpsd</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>slideRIcon</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>slideLIconClpsd</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>slideLIcon</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onunfold</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>onfold</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>paragraph</name>
		<tag-class>org.jquery4jsf.custom.paragraph.ParagraphTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>value</name>
			<required>false</required>
				<type>java.lang.Object</type>
			<description><![CDATA[Value of the component that can be either an EL expression or a literal text]]></description>
		</attribute>
		<attribute>
			<name>converter</name>
			<required>false</required>
				<type>javax.faces.convert.Converter</type>
			<description><![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id]]></description>
		</attribute>
		<attribute>
			<name>dir</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Html dir attribute of the input text]]></description>
		</attribute>
		<attribute>
			<name>lang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element]]></description>
		</attribute>
		<attribute>
			<name>title</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies extra information about an element]]></description>
		</attribute>
		<attribute>
			<name>xmlLang</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Specifies a language code for the content in an element, in XHTML documents]]></description>
		</attribute>
		<attribute>
			<name>style</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[CSS style(s) to be applied when this component is rendered.]]></description>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" property on generated markup.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>progressBar</name>
		<tag-class>org.jquery4jsf.custom.progressbar.ProgressBarTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>progressBarValue</name>
			<required>false</required>
				<type>int</type>
		</attribute>
		<attribute>
			<name>resizable</name>
			<required>false</required>
				<type>boolean</type>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<name>resizable</name>
		<tag-class>org.jquery4jsf.custom.resizable.ResizableTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set add draggable property on component where id is igual]]></description>
		</attribute>
		<attribute>
			<name>alsoResize</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Resize these elements synchronous when resizing.]]></description>
		</attribute>
		<attribute>
			<name>animateDuration</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Initialize a resizable with the animateDuration option specified.]]></description>
		</attribute>
		<attribute>
			<name>animateEasing</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Easing effect for animating.]]></description>
		</attribute>
		<attribute>
			<name>aspectRatio</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5.]]></description>
		</attribute>
		<attribute>
			<name>autoHide</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, automatically hides the handles except when the mouse hovers over the element.]]></description>
		</attribute>
		<attribute>
			<name>cancel</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Prevents resizing if you start on elements matching the selector.]]></description>
		</attribute>
		<attribute>
			<name>containment</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector.]]></description>
		</attribute>
		<attribute>
			<name>delay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element.]]></description>
		</attribute>
		<attribute>
			<name>distance</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element.]]></description>
		</attribute>
		<attribute>
			<name>ghost</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, a semi-transparent helper element is shown for resizing.]]></description>
		</attribute>
		<attribute>
			<name>grid</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]]]></description>
		</attribute>
		<attribute>
			<name>handles</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[if specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin.If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly.]]></description>
		</attribute>
		<attribute>
			<name>helper</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.]]></description>
		</attribute>
		<attribute>
			<name>maxHeight</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[This is the maximum height the resizable should be allowed to resize to.]]></description>
		</attribute>
		<attribute>
			<name>maxWidth</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[This is the maximum width the resizable should be allowed to resize to.]]></description>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[This is the minimum width the resizable should be allowed to resize to.]]></description>
		</attribute>
		<attribute>
			<name>minHeight</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[This is the minimum height the resizable should be allowed to resize to.]]></description>
		</attribute>
		<attribute>
			<name>onstart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the start of a resize operation.]]></description>
		</attribute>
		<attribute>
			<name>onresize</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered during the resize, on the drag of the resize handler.]]></description>
		</attribute>
		<attribute>
			<name>onstop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the end of a resize operation.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>selectable</name>
		<tag-class>org.jquery4jsf.custom.selectable.SelectableTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>for</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set add draggable property on component where id is igual]]></description>
		</attribute>
		<attribute>
			<name>autoRefresh</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually.]]></description>
		</attribute>
		<attribute>
			<name>cancel</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Prevents selecting if you start on elements matching the selector.]]></description>
		</attribute>
		<attribute>
			<name>delay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>distance</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance.]]></description>
		</attribute>
		<attribute>
			<name>filter</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The matching child elements will be made selectees (able to be selected).]]></description>
		</attribute>
		<attribute>
			<name>tolerance</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Possible values: 'touch', 'fit'.]]></description>
		</attribute>
		<attribute>
			<name>onselected</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the end of the select operation, on each element added to the selection.]]></description>
		</attribute>
		<attribute>
			<name>onselecting</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered during the select operation, on each element added to the selection.]]></description>
		</attribute>
		<attribute>
			<name>onstart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the beginning of the select operation.]]></description>
		</attribute>
		<attribute>
			<name>stop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the end of the select operation.]]></description>
		</attribute>
		<attribute>
			<name>onunselected</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered at the end of the select operation.]]></description>
		</attribute>
		<attribute>
			<name>onunselecting</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered during the select operation, on each element removed from the selection.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>slider</name>
		<tag-class>org.jquery4jsf.custom.slider.SliderTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>animate</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Whether to slide handle smoothly when user click outside handle on the bar.]]></description>
		</attribute>
		<attribute>
			<name>max</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The maximum value of the slider.]]></description>
		</attribute>
		<attribute>
			<name>min</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[The minimum value of the slider.]]></description>
		</attribute>
		<attribute>
			<name>orientation</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Normally you don't need to set this option because the plugin detects the slider orientation automatically. If the orientation is not correctly detected you can set this option to 'horizontal' or 'vertical'.]]></description>
		</attribute>
		<attribute>
			<name>range</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[If set to true, the slider will detect if you have two handles and create a stylable range element between these two. Two other possible values are 'min' and 'max'. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max.]]></description>
		</attribute>
		<attribute>
			<name>step</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the size or amount of each interval or step the slider takes between min and max. The full specified value range of the slider (max - min) needs to be evenly divisible by the step.]]></description>
		</attribute>
		<attribute>
			<name>sliderValue</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the value of the slider, if there's only one handle. If there is more than one handle, determines the value of the first handle.]]></description>
		</attribute>
		<attribute>
			<name>values</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This option can be used to specify multiple handles. If range is set to true, the length of 'values' should be 2.]]></description>
		</attribute>
		<attribute>
			<name>onstart</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the user starts sliding.]]></description>
		</attribute>
		<attribute>
			<name>onslide</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered on every mouse move during slide. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value. Return false in order to prevent a slide, based on ui.value.]]></description>
		</attribute>
		<attribute>
			<name>onchange</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered on slide stop, or if the value is changed programmatically (by the value method). Takes arguments event and ui. Use event.orginalEvent to detect whether the value changed by mouse, keyboard, or programmatically. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(this).slider('values', index) to get another handle's value.]]></description>
		</attribute>
		<attribute>
			<name>onstop</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[This event is triggered when the user stops sliding.]]></description>
		</attribute>
	</tag>
	<tag>
		<name>syntaxHighlighting</name>
		<tag-class>org.jquery4jsf.custom.syntaxhighlighting.SyntaxHighlightingTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>type</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Language type]]></description>
		</attribute>
	</tag>
	<tag>
		<name>tabbedPanel</name>
		<tag-class>org.jquery4jsf.custom.tabbedpanel.TabbedPanelTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>ajaxOptions</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>cache</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>collapsible</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>cookie</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>deselectable</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>event</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>fx</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>idPrefix</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>selected</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>spinner</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>tabPanel</name>
		<tag-class>org.jquery4jsf.custom.tabbedpanel.TabPanelTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>disabled</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>ajaxSupport</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>ajaxSource</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>tabName</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
	<tag>
		<name>tooltip</name>
		<tag-class>org.jquery4jsf.custom.tooltip.TooltipTag</tag-class>
		<body-content>JSP</body-content>
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Boolean value to specify the visibility of the component]]></description>
		</attribute>
		<attribute>
			<name>binding</name>
			<required>false</required>
				<type>javax.faces.component.UIComponent</type>
			<description><![CDATA[An EL expression that maps to a server-side component instance in a backing bean]]></description>
		</attribute>
		<attribute>
			<name>prerender</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[If set to true, the tooltip will be created on document load]]></description>
		</attribute>
		<attribute>
			<name>text</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Text/HTML which will appear inside the tooltip initially. If set to false the title attribute of the target element will be used. You can also pass a jQuery DOM array as the argument, which will clone the referenced elements and append them to the tooltip content. Note: Any content set using this property will be overwritten upon retrieval of remote data e.g. using the url attribute or API updateContent or loadContent methods.]]></description>
		</attribute>
		<attribute>
			<name>titleText</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Text/HTML which will appear inside the title element of the content. If set to false, no title element will be created.]]></description>
		</attribute>
		<attribute>
			<name>titleButton</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Text/HTML which will appear inside the title's button element (e.g. close link) located to the right of the title content. Button only appears if title element is created e.g. above title attributes is not false. If set to false, no button will appear.]]></description>
		</attribute>
		<attribute>
			<name>positionTarget</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[HTML element to position the tooltip in relation to.]]></description>
		</attribute>
		<attribute>
			<name>positionType</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Positioning type of the tooltip e.g. absolute. In most cases absolute positioning is sufficient.]]></description>
		</attribute>
		<attribute>
			<name>positionContainer</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>cornerTarget</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The corner of the target element by which to position the tooltip by. See the positioning tutorial for all possible corner values.]]></description>
		</attribute>
		<attribute>
			<name>cornerTooltip</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[The corner of the tooltip to position in relation to the above targets corner. See the positioning tutorial for all possible corner values.]]></description>
		</attribute>
		<attribute>
			<name>adjustX</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Increment by which to increase the x value of the tooltip coordinate. To decrease, use a minus number.]]></description>
		</attribute>
		<attribute>
			<name>adjustY</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Increment by which to increase the y value of the tooltip coordinate. To decrease, use a minus number.]]></description>
		</attribute>
		<attribute>
			<name>adjustMouse</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Determines if the tooltips position is adjusted to the mouse position when the position.target is set to 'mouse'.]]></description>
		</attribute>
		<attribute>
			<name>adjustScreen</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[etermines if the tooltips positioning takes into account screen width and height, preventing it from rendering off screen if possible. Note: Your tip and target corner options may be ignored when adjusting the position.]]></description>
		</attribute>
		<attribute>
			<name>adjustScroll</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[Determines if the tooltips position is adjusted when the document is scrolled.]]></description>
		</attribute>
		<attribute>
			<name>adjustResize</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Determines if the tooltips position is adjusted when the window is resized.]]></description>
		</attribute>
		<attribute>
			<name>showDelay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Time in milliseconds by which to delay the showing of the tooltip.]]></description>
		</attribute>
		<attribute>
			<name>showSolo</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Determines whether or not the tooltip will be shown in conjunction with other tooltips or on its own]]></description>
		</attribute>
		<attribute>
			<name>showReady</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Determines whether or not the tooltip is initially hidden or shown when ready]]></description>
		</attribute>
		<attribute>
			<name>showWhenTarget</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Defines the HTML element which will assigned the show event handler.]]></description>
		</attribute>
		<attribute>
			<name>showWhenEvent</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Event type which will trigger the show event of the tooltip. All possible values are documented under jQuery's Event: bind() documentation.]]></description>
		</attribute>
		<attribute>
			<name>showEffectLength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Length of time in milliseconds the above effect will last for.]]></description>
		</attribute>
		<attribute>
			<name>showEffectType</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Effect type to use upon showing the tooltip e.g. fade, slide or grow. Can also be a callback method which will be called when the tooltip is shown.]]></description>
		</attribute>
		<attribute>
			<name>hideDelay</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Time in milliseconds by which to delay the hiding of the tooltip. When used in conjunction with the fixed hide event, it determines the amount of time the user has to mouseover the tooltip when exiting the target element before the tooltip is hidden. When used in conjunction with the inactive hide event, it determines how long the tooltip stays visible for before being hidden, when to events are triggered on the tooltip.]]></description>
		</attribute>
		<attribute>
			<name>hideFixed</name>
			<required>false</required>
				<type>boolean</type>
			<description><![CDATA[When set to true, the tooltip will not hide if moused over, allowing the contents to be clicked and interacted with.]]></description>
		</attribute>
		<attribute>
			<name>hideWhenTarget</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Defines the HTML element which will assigned the hide event handler.]]></description>
		</attribute>
		<attribute>
			<name>hideWhenEvent</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Event type which will trigger the hide event of the tooltip. There are two custom events available: 'inactive' and 'unfocus'. The 'unfocus' event hides the tooltip when anywhere else on the document, except the tooltip itself, is clicked. The 'inactive' event hies the tooltip after a set period of inactivity, which is determined by the hide.delay option. All other possible values are documented under jQuery's Event: bind() documentation.]]></description>
		</attribute>
		<attribute>
			<name>hideEffectLength</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Length of time in milliseconds the above effect will last for.]]></description>
		</attribute>
		<attribute>
			<name>hideEffectType</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Effect type to use upon hiding the tooltip e.g. fade, slide or grow. Can also be a callback method which will be called when the tooltip is hidden.]]></description>
		</attribute>
		<attribute>
			<name>styleName</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Name of the tooltip style to apply to the generated tooltip]]></description>
		</attribute>
		<attribute>
			<name>styleWidthMin</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the minimum width of the tooltip.]]></description>
		</attribute>
		<attribute>
			<name>styleWidthMax</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the maximum width of the tooltip.]]></description>
		</attribute>
		<attribute>
			<name>styleBorderWidth</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the border width of the tooltip.]]></description>
		</attribute>
		<attribute>
			<name>styleBorderRadius</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[Determines the border radius, or roundness, of the tooltip border.]]></description>
		</attribute>
		<attribute>
			<name>styleBorderColor</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[Determines the colour of the tooltip border]]></description>
		</attribute>
		<attribute>
			<name>styleTipColor</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTipCorner</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTipSizeX</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTipSizeY</name>
			<required>false</required>
				<type>int</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTargetClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTooltipClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTipClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleTitleClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleContentClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
		<attribute>
			<name>styleActiveClass</name>
			<required>false</required>
				<type>java.lang.String</type>
			<description><![CDATA[]]></description>
		</attribute>
	</tag>
</taglib>